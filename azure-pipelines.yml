# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main
  
pool:
    vmImage: ubuntu-latest
  
stages:
  - stage: Terraform_Plan
    displayName: TfPlan
    jobs:
    - job: Tfplan
      steps:
        - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
          displayName: Install terraform
          inputs:
            terraformVersion: 'latest'
          
        - task: TerraformCLI@2
          displayName: Terraform Init
          inputs:
            command: 'init'
            backend: 'azurerm'
            backendServiceArm: "inspire service connection"
            backendAzureRmResourceGroupName: 'rg-uks-velocity-team2-001'
            backendAzureRmSubscriptionId: '3af0f5b2-c721-42d7-96ab-0831a6f67bab'
            backendAzureRmStorageAccountName: 'azdevbox'
            backendAzureRmContainerName: 'terraformstate'
            backendAzureRmKey: 'terraform.tfstate'
            allowTelemetryCollection: true
  
        - task: TerraformCLI@2
          displayName: Terraform plan
          inputs:
            command: 'plan'
            providerAzureRmSubsciptionId: "3af0f5b2-c721-42d7-96ab-0831a6f67bab"
            environmentServiceName: "inspire service connection"
            allowTelemetryCollection: true